// <auto-generated />
using System;
using Coling.API.Afiliado;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Coling.API.Afiliado.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20240313210414_Migracion")]
    partial class Migracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Coling.Shared.AfiliadoIdioma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdAfiliado")
                        .HasColumnType("int");

                    b.Property<int>("IdIdioma")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdAfiliado");

                    b.HasIndex("IdIdioma");

                    b.ToTable("AfiliadosIdiomas");
                });

            modelBuilder.Entity("Coling.Shared.Afiliados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoAfiliado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FechaAfiliacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<string>("NroTituloProvisional")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdPersona");

                    b.ToTable("Afiliados");
                });

            modelBuilder.Entity("Coling.Shared.Direccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPersona");

                    b.ToTable("Direcciones");
                });

            modelBuilder.Entity("Coling.Shared.Estudios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("IdAfiliado")
                        .HasColumnType("int");

                    b.Property<int>("IdGrado")
                        .HasColumnType("int");

                    b.Property<int>("IdInstitucion")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoEstudio")
                        .HasColumnType("int");

                    b.Property<string>("TituloRecibido")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("IdAfiliado");

                    b.HasIndex("IdGrado");

                    b.HasIndex("IdInstitucion");

                    b.HasIndex("IdTipoEstudio");

                    b.ToTable("Estudios");
                });

            modelBuilder.Entity("Coling.Shared.ExperienciaLaboral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CargoTitulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("FechaFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAfiliado")
                        .HasColumnType("int");

                    b.Property<int>("IdInstitucion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdAfiliado");

                    b.HasIndex("IdInstitucion");

                    b.ToTable("ExperienciasLaborales");
                });

            modelBuilder.Entity("Coling.Shared.GradoAcademico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NombreGrado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("GradosAcademicos");
                });

            modelBuilder.Entity("Coling.Shared.Idioma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NombreIdioma")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.HasKey("Id");

                    b.ToTable("Idiomas");
                });

            modelBuilder.Entity("Coling.Shared.Institucion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("IdTipoInstitucion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoInstitucion");

                    b.ToTable("Instituciones");
                });

            modelBuilder.Entity("Coling.Shared.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ci")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("Coling.Shared.PersonatipoSocial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoSocial")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPersona");

                    b.HasIndex("IdTipoSocial");

                    b.ToTable("PersonasTiposSociales");
                });

            modelBuilder.Entity("Coling.Shared.Profesion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("IdGrado")
                        .HasColumnType("int");

                    b.Property<string>("NombreProfesion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("IdGrado");

                    b.ToTable("Profesiones");
                });

            modelBuilder.Entity("Coling.Shared.ProfesionAfiliado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FechaAsignacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAfiliado")
                        .HasColumnType("int");

                    b.Property<int>("IdProfesion")
                        .HasColumnType("int");

                    b.Property<string>("NroSelloSIB")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("IdAfiliado");

                    b.HasIndex("IdProfesion");

                    b.ToTable("ProfesionesAfiliados");
                });

            modelBuilder.Entity("Coling.Shared.Telefono", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<string>("NroTelefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("IdPersona");

                    b.ToTable("Telefonos");
                });

            modelBuilder.Entity("Coling.Shared.TipoEstudio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TiposEstudios");
                });

            modelBuilder.Entity("Coling.Shared.TipoInstitucion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TiposInstituciones");
                });

            modelBuilder.Entity("Coling.Shared.TipoSocial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NombreSocial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TiposSociales");
                });

            modelBuilder.Entity("Coling.Shared.AfiliadoIdioma", b =>
                {
                    b.HasOne("Coling.Shared.Afiliados", "Afiliado")
                        .WithMany()
                        .HasForeignKey("IdAfiliado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coling.Shared.Idioma", "Idioma")
                        .WithMany("Afiliados")
                        .HasForeignKey("IdIdioma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Afiliado");

                    b.Navigation("Idioma");
                });

            modelBuilder.Entity("Coling.Shared.Afiliados", b =>
                {
                    b.HasOne("Coling.Shared.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Coling.Shared.Direccion", b =>
                {
                    b.HasOne("Coling.Shared.Persona", "Persona")
                        .WithMany("Direcciones")
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Coling.Shared.Estudios", b =>
                {
                    b.HasOne("Coling.Shared.Afiliados", "Afiliado")
                        .WithMany()
                        .HasForeignKey("IdAfiliado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coling.Shared.GradoAcademico", "GradoAcademico")
                        .WithMany("Estudios")
                        .HasForeignKey("IdGrado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coling.Shared.Institucion", "Institucion")
                        .WithMany("Estudios")
                        .HasForeignKey("IdInstitucion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coling.Shared.TipoEstudio", "TipoEstudio")
                        .WithMany("Estudios")
                        .HasForeignKey("IdTipoEstudio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Afiliado");

                    b.Navigation("GradoAcademico");

                    b.Navigation("Institucion");

                    b.Navigation("TipoEstudio");
                });

            modelBuilder.Entity("Coling.Shared.ExperienciaLaboral", b =>
                {
                    b.HasOne("Coling.Shared.Afiliados", "Afiliado")
                        .WithMany()
                        .HasForeignKey("IdAfiliado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coling.Shared.Institucion", "Institucion")
                        .WithMany("ExperienciasLaborales")
                        .HasForeignKey("IdInstitucion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Afiliado");

                    b.Navigation("Institucion");
                });

            modelBuilder.Entity("Coling.Shared.Institucion", b =>
                {
                    b.HasOne("Coling.Shared.TipoInstitucion", "TipoInstitucion")
                        .WithMany("Instituciones")
                        .HasForeignKey("IdTipoInstitucion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoInstitucion");
                });

            modelBuilder.Entity("Coling.Shared.PersonatipoSocial", b =>
                {
                    b.HasOne("Coling.Shared.Persona", "Persona")
                        .WithMany("TiposSociales")
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coling.Shared.TipoSocial", "TipoSocial")
                        .WithMany("Personas")
                        .HasForeignKey("IdTipoSocial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");

                    b.Navigation("TipoSocial");
                });

            modelBuilder.Entity("Coling.Shared.Profesion", b =>
                {
                    b.HasOne("Coling.Shared.GradoAcademico", "GradoAcademico")
                        .WithMany()
                        .HasForeignKey("IdGrado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GradoAcademico");
                });

            modelBuilder.Entity("Coling.Shared.ProfesionAfiliado", b =>
                {
                    b.HasOne("Coling.Shared.Afiliados", "Afiliado")
                        .WithMany()
                        .HasForeignKey("IdAfiliado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coling.Shared.Profesion", "Profesion")
                        .WithMany("Afiliados")
                        .HasForeignKey("IdProfesion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Afiliado");

                    b.Navigation("Profesion");
                });

            modelBuilder.Entity("Coling.Shared.Telefono", b =>
                {
                    b.HasOne("Coling.Shared.Persona", "Persona")
                        .WithMany("Telefonos")
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Coling.Shared.GradoAcademico", b =>
                {
                    b.Navigation("Estudios");
                });

            modelBuilder.Entity("Coling.Shared.Idioma", b =>
                {
                    b.Navigation("Afiliados");
                });

            modelBuilder.Entity("Coling.Shared.Institucion", b =>
                {
                    b.Navigation("Estudios");

                    b.Navigation("ExperienciasLaborales");
                });

            modelBuilder.Entity("Coling.Shared.Persona", b =>
                {
                    b.Navigation("Direcciones");

                    b.Navigation("Telefonos");

                    b.Navigation("TiposSociales");
                });

            modelBuilder.Entity("Coling.Shared.Profesion", b =>
                {
                    b.Navigation("Afiliados");
                });

            modelBuilder.Entity("Coling.Shared.TipoEstudio", b =>
                {
                    b.Navigation("Estudios");
                });

            modelBuilder.Entity("Coling.Shared.TipoInstitucion", b =>
                {
                    b.Navigation("Instituciones");
                });

            modelBuilder.Entity("Coling.Shared.TipoSocial", b =>
                {
                    b.Navigation("Personas");
                });
#pragma warning restore 612, 618
        }
    }
}
